{"version":3,"sources":["webpack:///path---blog-using-git-hooks-for-project-deployment-wins-40aedda6eeabbf568081.js","webpack:///./.cache/json/blog-using-git-hooks-for-project-deployment-wins.json"],"names":["webpackJsonp","1485","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","tags","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,eAAAC,OAAA,eAA8CC,gBAAmBC,GAAA,6IAAAC,KAAA,+vBAAAC,aAAu6BL,MAAA,8CAAAM,KAAA,oBAAAC,MAAA,UAAkGC","file":"path---blog-using-git-hooks-for-project-deployment-wins-40aedda6eeabbf568081.js","sourcesContent":["webpackJsonp([91834249446268],{\n\n/***/ 1485:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Psyked.co.uk\",\"author\":\"James Ford\"}},\"markdownRemark\":{\"id\":\"/Users/James/Repositories/portfolio-2018/src/posts/using-git-hooks-for-project-deployment-wins/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>I'm amazed that I've never really used this before, but as well as using <strong>Git </strong>to manage your version history, you can also tap into built-in Git hooks to copy your project source code into another location after you've pushed your updates.</p>\\n<p>Essentially it's a cheap deployment process, and allows you to keep your source code repository and all its gubbins in one location, and serve your website from another.</p>\\n<p>DigitalOcean has an excellent tutorial which runs you through setting up this kind of thing on a Linux-based box, and that's available here: <a href=\\\"https://www.digitalocean.com/community/articles/how-to-set-up-automatic-deployment-with-git-with-a-vps\\\">How to set up Automatic Deployment with Git with a VPS.</a></p>\",\"frontmatter\":{\"title\":\"Using Git Hooks for Project Deployment wins\",\"date\":\"February 09, 2014\",\"tags\":[\"git\"]}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-using-git-hooks-for-project-deployment-wins-40aedda6eeabbf568081.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Psyked.co.uk\",\"author\":\"James Ford\"}},\"markdownRemark\":{\"id\":\"/Users/James/Repositories/portfolio-2018/src/posts/using-git-hooks-for-project-deployment-wins/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>I'm amazed that I've never really used this before, but as well as using <strong>Git </strong>to manage your version history, you can also tap into built-in Git hooks to copy your project source code into another location after you've pushed your updates.</p>\\n<p>Essentially it's a cheap deployment process, and allows you to keep your source code repository and all its gubbins in one location, and serve your website from another.</p>\\n<p>DigitalOcean has an excellent tutorial which runs you through setting up this kind of thing on a Linux-based box, and that's available here: <a href=\\\"https://www.digitalocean.com/community/articles/how-to-set-up-automatic-deployment-with-git-with-a-vps\\\">How to set up Automatic Deployment with Git with a VPS.</a></p>\",\"frontmatter\":{\"title\":\"Using Git Hooks for Project Deployment wins\",\"date\":\"February 09, 2014\",\"tags\":[\"git\"]}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-using-git-hooks-for-project-deployment-wins.json\n// module id = 1485\n// module chunks = 91834249446268"],"sourceRoot":""}