{"version":3,"sources":["webpack:///./src/components/Tiles.js","webpack:///./src/components/Tags.js","webpack:///./src/components/SourcePost.js","webpack:///./src/templates/blog-post.js","webpack:///./src/components/ThemeSwitch.js","webpack:///./src/components/Header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Banner.js"],"names":["ImageContainer","styled","aside","withConfig","displayName","componentId","Wrapper","Img","Tile","section","Title","h3","DateLabel","p","TileContainer","Blackout","div","Tiles","_ref","tiles","react_default","a","createElement","className","filter","tile","map","index","key","gatsby_link_default","to","frontmatter","path","image","childImageSharp","sizes","title","description","format","Date","date","PostTags","tags","styles","tagsLabel","tag","slug","replace","toLowerCase","length","StyledElement","SourcePost","url","href","react","BlogPostTemplate","render","post","this","props","data","markdownRemark","_ref$frontmatter","_ref2$frontmatter","siteTitle","get","imageCredit","_this$props$pageConte","pageContext","next","prev","console","log","html","Layout","Helmet_default","htmlAttributes","lang","name","content","creator","src","Banner","Object","assign","imageCreditMarkdown","timeToRead","dangerouslySetInnerHTML","__html","components_SourcePost","Tags","components_Tiles","React","Component","pageQuery","SwitchWrapper","label","Label","span","Handle","Input","input","ThemeSwitch","gatsby_plugin_dark_mode","theme","toggleTheme","type","onChange","e","target","checked","Header","header","Nav","nav","MenuLink","Link","HeaderComponent","activeClassName","exact","components_ThemeSwitch","Overlay","TwitterLink","li","GitHubLink","LinkedInLink","MediumLink","InstagramLink","Footer","id","style","backgroundColor","colour","position","padding","zIndex","color","index_esm","Template","_this$props","children","keyColour","muted","Fragment","components_Header","components_Footer","figure","ImageWrapper","ImageCredit","figcaption","background","_objectWithoutPropertiesLoose","colors","react__WEBPACK_IMPORTED_MODULE_5___default","minHeight","react_markdown__WEBPACK_IMPORTED_MODULE_9___default","source","renderers","paragraph","_ref2"],"mappings":"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","file":"component---src-templates-blog-post-js-6b5b154805a7fd61db83.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Link from 'gatsby-link'\nimport Img from 'gatsby-image'\nimport { format } from 'date-fns'\n\nconst ImageContainer = styled.aside`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n`\n\nconst Wrapper = styled(Img)`\n    height:100%;\n    object-fit: cover;\n`\n\nconst Tile = styled.section`\n    display: flex;\n    flex: 1;\n    padding: 2em;\n    position: relative;\n\n    a, a:link, a:active, a:visited, a:hover {\n        color: #fcfcfd;\n    }\n    \n    h3, \n    p {\n        position: relative;\n    }\n`\n\nconst Title = styled.h3`\n    margin-top: 0;\n`\n\nconst DateLabel = styled.p`\n    border-top: 1px solid $bg;\n    display: inline-block;\n`\n\nconst TileContainer = styled.aside`\n    width: 100%;\n    height: calc(33vw - 2em);\n    max-height: calc(30em / (16 / 9));\n    display: flex;\n    flex-direction: row;\n    justify-content: stretch;\n    padding-bottom: 0em;\n    background: hsl(240,100%,12%);\n`\n\nconst Blackout = styled.div`\n    position: absolute;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 100%;\n    background: hsla(240,100%,12%,0.6);\n`\n\nconst Tiles = ({ tiles }) => {\n  return (\n    <div className=\"bodyContainer\">\n      <TileContainer>\n        {tiles &&\n          tiles\n            .filter(tile => !!tile)\n            .map((tile, index) => {\n              return (\n                <Tile key={index} >\n                  <Link to={tile.frontmatter.path}>\n                    {tile.frontmatter.image &&\n                      tile.frontmatter.image.childImageSharp && (\n                        <ImageContainer>\n                          <Wrapper\n                            sizes={tile.frontmatter.image.childImageSharp.sizes}\n                          />\n                        </ImageContainer>\n                      )}\n                    <Blackout />\n                    <Title>{tile.frontmatter.title}</Title>\n                    <p>\n                      {tile.frontmatter.description}\n                    </p>\n                    <DateLabel>\n                      {format(new Date(tile.frontmatter.date), 'DD MMM YYYY')}\n                    </DateLabel>\n                  </Link>\n                </Tile>\n              )\n            })}\n      </TileContainer>\n    </div>\n  )\n}\n\nexport default Tiles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Link from 'gatsby-link'\n\nimport styles from './tags.module.scss'\n\nconst PostTags = ({ tags }) => {\n    if (!tags) return <aside />\n    return (\n        <aside>\n            <span className={styles.tagsLabel}>Tagged as:</span>\n            {tags.map((tag, index) => {\n                const slug = tag\n                    .replace(/\\W/gi, '-')\n                    .toLowerCase()\n                return (\n                    <span key={tag} className={styles.tag}>\n                        <Link to={`/tag/${slug}`}>{tag}</Link>\n                        {(index !== tags.length - 1) &&\n                            (\n                                <span>, </span>\n                            )\n                        }\n                    </span>\n                )\n            })}\n        </aside>\n    )\n}\n\nPostTags.propTypes = {\n    tags: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default PostTags","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst StyledElement = styled.aside`\n  margin: 1em -2em;\n  padding: 1em 2em;\n  background: linear-gradient(90deg,#d0d0dc 0,#d0d0dc 8px,#eeeef2 0);\n\n  .dark & {\n    background: linear-gradient(90deg,#3a3a48 0,#3a3a48 8px,#3d3d4a 0);\n  }\n`\n\nconst SourcePost = ({ url }) => {\n  if (!url) return <Fragment />\n  return (\n    <StyledElement>\n      This article was originally published at <a href={url}>{url}</a>\n    </StyledElement>\n  )\n}\n\nSourcePost.propTypes = {}\n\nexport default SourcePost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport { graphql } from 'gatsby'\n\nimport Banner from '../components/Banner'\nimport Tiles from '../components/Tiles'\nimport Tags from '../components/Tags'\nimport SourcePost from '../components/SourcePost'\nimport Layout from '../components/Layout'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark || {}\n    const { frontmatter: { title, tags, url, image, description } = {} } =\n      post || {}\n    const { frontmatter = {} } = post || {}\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const imageCredit = get(frontmatter, 'image_credit')\n    const { next, prev } = this.props.pageContext\n\n    console.log(post.html)\n\n    return (\n      <Layout>\n        <Helmet\n          title={`${title} | ${siteTitle}`}\n          htmlAttributes={{\n            lang: 'en',\n          }}\n        >\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta name=\"twitter:site\" content=\"@psyked\" />\n          <meta name=\"twitter:creator\" content={frontmatter.creator} />\n          <meta name=\"twitter:title\" content={title} />\n          <meta name=\"twitter:description\" content={description} />\n          {image && image.childImageSharp && (\n            <meta\n              name=\"twitter:image\"\n              content={image.childImageSharp.sizes.src}\n            />\n          )}\n        </Helmet>\n        <Banner {...frontmatter} imageCreditMarkdown={imageCredit} timeToRead={post.timeToRead} />\n        <div className=\"bodyContainer\">\n          <div className=\"inner\">\n            <div className=\"bodyContent\">\n              <div dangerouslySetInnerHTML={{ __html: post.html }} />\n              <hr className=\"endPost\" />\n              <SourcePost url={url} />\n              <Tags tags={tags} />\n            </div>\n          </div>\n        </div>\n        <Tiles tiles={[next, prev]} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        url\n        image {\n          childImageSharp {\n            sizes(maxWidth: 630) {\n              ...GatsbyImageSharpSizes\n            }\n          }\n          colors {\n            ...GatsbyImageColors\n          }\n        }\n        description\n        image_credit\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode'\nimport styled from 'styled-components'\n\nconst SwitchWrapper = styled.label`\n  background-color: white;\n  border-radius: 18px;\n  cursor: pointer;\n  display: inline-block;\n  height: 20px;\n  padding: 3px;\n  position: relative;\n  vertical-align: top;\n  width: 56px;\n  box-sizing: content-box;\n`\n\nconst Label = styled.span`\n  background: goldenrod none repeat scroll 0 0;\n  border-radius: inherit;\n  display: block;\n  font-size: 10px;\n  height: inherit;\n  position: relative;\n  text-transform: uppercase;\n  transition: all 0.15s ease-out 0s;\n\n  ::before,\n  ::after {\n    line-height: 1;\n    margin-top: -0.5em;\n    position: absolute;\n    top: 50%;\n    transition: inherit;\n  }\n`\n\nconst Handle = styled.span`\n  background-color: white;\n  border-radius: 10px;\n  height: 18px;\n  left: 4px;\n  position: absolute;\n  top: 4px;\n  transition: left 0.15s ease-out 0s;\n  width: 18px;\n\n  ::before {\n    // background-color: black;\n    border-radius: 6px;\n    content: '';\n    height: 12px;\n    left: 50%;\n    margin: -6px 0 0 -6px;\n    position: absolute;\n    top: 50%;\n    width: 12px;\n  }\n`\n\nconst Input = styled.input`\n  left: 0;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n\n  :checked ~ ${Label} {\n    background: black none repeat scroll 0 0;\n  }\n\n  :checked ~ ${Handle} {\n    left: 37px;\n  }\n`\n\nclass ThemeSwitch extends React.Component {\n  render() {\n    return (\n      <ThemeToggler>\n        {({ theme, toggleTheme }) => (\n          <SwitchWrapper className=\"switch\">\n            <Input\n              type=\"checkbox\"\n              onChange={e => toggleTheme(e.target.checked ? 'dark' : 'light')}\n              checked={theme === 'dark'}\n            />\n            <Label />\n            <Handle />\n          </SwitchWrapper>\n        )}\n      </ThemeToggler>\n    )\n  }\n}\n\nexport default ThemeSwitch\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport styled from 'styled-components'\n\nimport ThemeSwitch from './ThemeSwitch'\n\nconst Header = styled.header`\n  display: block;\n  background: hsl(240, 14%, 19%);\n  padding-left: calc((100vw - 60em) / 2);\n  padding-right: calc((100vw - 60em) / 2);\n`\n\nconst Nav = styled.nav`\n  max-width: 60em;\n  margin: 0 auto;\n  padding: 0.5em 0.2em 0.5em 0.7em;\n  width:100%;\n  display: block;\n`\n\nconst MenuLink = styled(Link)`\n  margin-right: 0.5em;\n  padding: 0.4em;\n\n  &,\n  a {\n    &,\n    :link,\n    :active,\n    :visited,\n    :hover {\n      color: hsl(240, 14%, 99%);\n    }\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &.active {\n    border-radius: 0.15em;\n    background-color: hsl(346, 88%, 52%);\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 1em;\n`\n\nconst HeaderComponent = props => (\n  <Header>\n    <Wrapper>\n      <Nav>\n        <MenuLink to=\"/\" activeClassName=\"active\" exact=\"true\">\n          Home\n        </MenuLink>\n        <MenuLink to=\"/blog/\" activeClassName=\"active\">\n          Blog Archive\n        </MenuLink>\n        {/* <MenuLink to=\"/projects/\" activeClassName=\"active\">\n          Projects\n        </MenuLink> */}\n        <MenuLink to=\"/speaking/\" activeClassName=\"active\">\n          Public Speaking\n        </MenuLink>\n      </Nav>\n      <ThemeSwitch />\n    </Wrapper>\n  </Header>\n)\n\nexport default HeaderComponent\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport {\n  FaGithub,\n  FaTwitter,\n  FaInstagram,\n  FaMedium,\n  FaLinkedin,\n} from 'react-icons/fa'\n\nconst Overlay = styled.aside`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0px;\n  left: 0px;\n  background: hsla(240, 100%, 12%, 0.6);\n  z-index: 1;\n`\n\nconst TwitterLink = styled.li`\n  background: #00acee;\n\n  a,\n  a:link,\n  a:active,\n  a:hover,\n  a:visited {\n    color: #ffffff;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst GitHubLink = styled.li`\n  background: #181818;\n\n  a,\n  a:link,\n  a:active,\n  a:hover,\n  a:visited {\n    color: #ffffff;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst LinkedInLink = styled.li`\n  background: #0077b5;\n\n  a,\n  a:link,\n  a:active,\n  a:hover,\n  a:visited {\n    color: #ffffff;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst MediumLink = styled.li`\n  background: #37b042;\n\n  a,\n  a:link,\n  a:active,\n  a:hover,\n  a:visited {\n    color: #ffffff;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst InstagramLink = styled.li`\n  background: #d6249f;\n  background: radial-gradient(\n    circle at 30% 107%,\n    #fdf497 0%,\n    #fdf497 5%,\n    #fd5949 45%,\n    #d6249f 60%,\n    #285aeb 90%\n  );\n\n  a,\n  a:link,\n  a:active,\n  a:hover,\n  a:visited {\n    color: #ffffff;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst Footer = (props) => (\n  <footer id=\"footer\" style={{\n    backgroundColor: props.colour || 'hsla(240, 100%, 12%, 0.6)',\n    position: 'relative',\n    padding: '1em 0 3em'\n  }}>\n    <Overlay />\n    <div className=\"bodyContainer\" style={{ zIndex: 2, position: 'relative', color: 'white' }}>\n      <div className=\"bodyContent\">\n        <h3>Elsewhere, on social media;</h3>\n        <ul className=\"external-profiles\">\n          <TwitterLink>\n            <a href=\"//twitter.com/psyked\">\n              <span>\n                <FaTwitter />\n                Twitter\n                        </span>\n            </a>\n          </TwitterLink>\n          <InstagramLink>\n            <a href=\"//instagram.com/psyked\">\n              <span>\n                <FaInstagram />\n                Instagram\n                        </span>\n            </a>\n          </InstagramLink>\n          <GitHubLink>\n            <a href=\"//github.com/psyked\">\n              <span>\n                <FaGithub />\n                GitHub\n                        </span>\n            </a>\n          </GitHubLink>\n          <LinkedInLink>\n            <a href=\"//linkedin.com/in/jamesford\">\n              <span>\n                <FaLinkedin />\n                LinkedIn\n                        </span>\n            </a>\n          </LinkedInLink>\n          <MediumLink>\n            <a href=\"//medium.com/@psyked\">\n              <span>\n                <FaMedium />\n                Medium\n                        </span>\n            </a>\n          </MediumLink>\n        </ul>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\n\nimport Header from './Header'\nimport Footer from './Footer'\n\nimport '../assets/scss/main.scss'\n\nclass Template extends React.Component {\n  render() {\n    const { children, keyColour } = this.props;\n\n    let colour;\n\n    if (keyColour && keyColour.muted) {\n      colour = keyColour.muted\n    }\n\n    return (\n      <>\n        <Helmet\n          htmlAttributes={{\n            lang: 'en',\n          }}\n        />\n        <Header />\n        <main>{children}</main>\n        <Footer colour={colour} />\n      </>\n    )\n  }\n}\n\nTemplate.propTypes = {\n  children: PropTypes.oneOf([PropTypes.node, PropTypes.func]),\n}\n\nexport default Template\n","import React from 'react'\n// import { withPrefix } from 'gatsby-link'\nimport Img from 'gatsby-image'\nimport { format } from 'date-fns'\nimport styled from 'styled-components'\nimport ReactMarkdown from 'react-markdown'\n\nconst Wrapper = styled.header`\n  background: center center / cover hsl(240, 100%, 12%);\n  position: relative;\n  padding-top: calc(68px + 2em);\n  padding-bottom: 3em;\n  padding-left: calc((100vw - 60em) / 2);\n  padding-right: calc((100vw - 60em) / 2);\n`\n\nconst Overlay = styled.aside`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0px;\n  left: 0px;\n  background: hsla(240, 100%, 12%, 0.6);\n  z-index: 1;\n`\n\nconst ImageContainer = styled.figure`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  // padding-left: calc((100vw - 60em) / 2);\n  // padding-right: calc((100vw - 60em) / 2);\n  height: 100%;\n  overflow: hidden;\n  margin:0;\n}`\n\nconst ImageWrapper = styled(Img)`\n  height: 100%;\n`\nconst ImageCredit = styled.figcaption`\n  position: absolute;\n  bottom: 1em;\n  // width: 100%;\n  right: 1.6em;\n  font-size: 0.6em;\n  color: white;\n  z-index: 2;\n  text-align: right;\n\n  // left: calc((100vw - 60em) / 2);\n  // right: calc((100vw - 60em) / 2);\n  // padding-right: 0;\n`\n\nconst Banner = ({\n  title,\n  date,\n  description,\n  image,\n  imageCredit,\n  imageCreditMarkdown,\n  timeToRead,\n  ...props\n}) => {\n  let background\n  if (image) {\n    if (image.colors) {\n      if (image.colors.muted) {\n        background = image.colors.muted\n      }\n    }\n  }\n  return (\n    <Wrapper style={{ minHeight: '320px', background: background }} {...props}>\n      {image && image.childImageSharp && (\n        <ImageContainer>\n          <ImageWrapper {...image.childImageSharp} />\n          {!!imageCredit && (\n            <div style={{ position: 'relative' }}>\n              <ImageCredit>Cover image credit: {imageCredit}</ImageCredit>\n            </div>\n          )}\n          {!!imageCreditMarkdown && (\n            <div style={{ position: 'relative' }}>\n              <ImageCredit>\n                Cover image credit:{' '}\n                <ReactMarkdown\n                  source={imageCreditMarkdown}\n                  renderers={{\n                    paragraph: ({ children }) => <span>{children}</span>,\n                  }}\n                />\n              </ImageCredit>\n            </div>\n          )}\n        </ImageContainer>\n      )}\n      <Overlay />\n      <div\n        className=\"bodyContent\"\n        style={{\n          color: 'white',\n          position: 'relative',\n          zIndex: 2,\n        }}\n      >\n        {!!title && (\n          <header>\n            <h1>{title}</h1>\n          </header>\n        )}\n        {!!description && (\n          <div>\n            <h2>{description}</h2>\n          </div>\n        )}\n        {!!date && (\n          <aside>Published: {format(new Date(date), 'DD MMM YYYY')} {!!timeToRead && <> | {timeToRead} minute read</>}</aside>\n        )}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default Banner\n"],"sourceRoot":""}