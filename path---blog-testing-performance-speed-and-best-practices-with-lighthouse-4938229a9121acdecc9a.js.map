{"version":3,"sources":["webpack:///path---blog-testing-performance-speed-and-best-practices-with-lighthouse-4938229a9121acdecc9a.js","webpack:///./.cache/json/blog-testing-performance-speed-and-best-practices-with-lighthouse.json"],"names":["webpackJsonp","1344","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","tags","url","pathContext","prev","path","image","next"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,eAAAC,OAAA,eAA8CC,gBAAmBC,GAAA,8JAAAC,KAAA,ozEAAAC,aAAggFL,MAAA,gEAAAM,KAAA,mBAAAC,MAAA,gDAAAC,IAAA,QAAuKC,aAAgBC,MAAQL,aAAeM,KAAA,yBAAAJ,MAAA,cAAAP,MAAA,kBAAAY,MAAA,KAAAN,KAAA,6BAAgIO,MAASR,aAAeM,KAAA,2EAAAJ,MAAA,oBAAAP,MAAA,wEAAAY,MAAA,KAAAN,KAAA","file":"path---blog-testing-performance-speed-and-best-practices-with-lighthouse-4938229a9121acdecc9a.js","sourcesContent":["webpackJsonp([12158288722291],{\n\n/***/ 1344:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Psyked.co.uk\",\"author\":\"James Ford\"}},\"markdownRemark\":{\"id\":\"/Users/James/Repositories/portfolio-2018/src/posts/testing-performance-speed-and-best-practices-with-lighthouse/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<blockquote>\\n<p>Lighthouse is an open-source, automated tool for improving the quality of your web apps.</p>\\n</blockquote>\\n<p><img src=\\\"/content/images/2017/01/mockup-screenshot.jpg\\\" alt=\\\"Lighthouse screenshot\\\"></p>\\n<p>Web Development is an ever changing landscape, and as such we use a variety of tools to evaluate what we do. Like many others with a vested interest in the web, Google has its own projects, and <a href=\\\"https://developers.google.com/web/tools/lighthouse/\\\">Lighthouse</a> is one of them.</p>\\n<p>I find the Lighthouse tool <em>particularly</em> interesting for two reasons - firstly because it looks at a few of the more recent specs like <strong>Progressive Web Apps</strong> and the difficult-to-evaluate concepts like perceived speed, and secondly because it's developed by Google, which implies that it's looking at the kind of website optimisations that Google cares about when indexing a website.</p>\\n<h2>What Lighthouse checks</h2>\\n<p>A few of the things that Lighthouse currently tests for are:</p>\\n<ul>\\n<li>Offline/flaky connection support</li>\\n<li>Page load performance</li>\\n<li>Progressive Enhancement</li>\\n<li>Secure connection (HTTPS)</li>\\n<li>Mobile-friendliness</li>\\n<li>Page render speed / avoiding \\\"jank\\\"</li>\\n<li>Modern accessibility tags</li>\\n</ul>\\n<h2>Running Lighthouse</h2>\\n<p>There are two ways to run a set of Lighthouse tests. One method is through a Chrome Extension, which you can install through the <a href=\\\"https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk\\\">Chrome Web Store</a> or as a Node module on <a href=\\\"https://www.npmjs.com/package/lighthouse\\\">NPM.</a></p>\\n<h2>Useful Links</h2>\\n<ul>\\n<li><a href=\\\"https://developers.google.com/web/tools/lighthouse/\\\">The Lighthouse tool on Google Developers</a></li>\\n<li><a href=\\\"https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk\\\">Lighthouse on the Chrome Web Store</a></li>\\n<li><a href=\\\"https://www.npmjs.com/package/lighthouse\\\">Lighthouse on NPM</a></li>\\n<li><a href=\\\"https://googlechrome.github.io/lighthouse/viewer/\\\">Lighthouse report Viewer</a></li>\\n</ul>\\n<p>And if you're interested in an example report, take a look at <a href=\\\"https://googlechrome.github.io/lighthouse/viewer/?gist=9573cb9302e15405026b40098c8fd342\\\">the report for www.psyked.co.uk</a></p>\",\"frontmatter\":{\"title\":\"Testing Performance, Speed and Best Practices with Lighthouse\",\"date\":\"January 28, 2017\",\"tags\":[\"performance\",\"testing\",\"progressive-web-apps\"],\"url\":null}}},\"pathContext\":{\"prev\":{\"frontmatter\":{\"path\":\"/blog/the-dom-monster/\",\"tags\":[\"javascript\"],\"title\":\"The DOM Monster\",\"image\":null,\"date\":\"2011-03-24T17:22:57.000Z\"}},\"next\":{\"frontmatter\":{\"path\":\"/blog/targeting-multiple-browsers-with-css-and-some-javascript-trickery/\",\"tags\":[\"css\",\"javascript\"],\"title\":\"Targeting multiple browsers with CSS... and some Javascript trickery.\",\"image\":null,\"date\":\"2009-11-28T08:00:19.000Z\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-testing-performance-speed-and-best-practices-with-lighthouse-4938229a9121acdecc9a.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Psyked.co.uk\",\"author\":\"James Ford\"}},\"markdownRemark\":{\"id\":\"/Users/James/Repositories/portfolio-2018/src/posts/testing-performance-speed-and-best-practices-with-lighthouse/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<blockquote>\\n<p>Lighthouse is an open-source, automated tool for improving the quality of your web apps.</p>\\n</blockquote>\\n<p><img src=\\\"/content/images/2017/01/mockup-screenshot.jpg\\\" alt=\\\"Lighthouse screenshot\\\"></p>\\n<p>Web Development is an ever changing landscape, and as such we use a variety of tools to evaluate what we do. Like many others with a vested interest in the web, Google has its own projects, and <a href=\\\"https://developers.google.com/web/tools/lighthouse/\\\">Lighthouse</a> is one of them.</p>\\n<p>I find the Lighthouse tool <em>particularly</em> interesting for two reasons - firstly because it looks at a few of the more recent specs like <strong>Progressive Web Apps</strong> and the difficult-to-evaluate concepts like perceived speed, and secondly because it's developed by Google, which implies that it's looking at the kind of website optimisations that Google cares about when indexing a website.</p>\\n<h2>What Lighthouse checks</h2>\\n<p>A few of the things that Lighthouse currently tests for are:</p>\\n<ul>\\n<li>Offline/flaky connection support</li>\\n<li>Page load performance</li>\\n<li>Progressive Enhancement</li>\\n<li>Secure connection (HTTPS)</li>\\n<li>Mobile-friendliness</li>\\n<li>Page render speed / avoiding \\\"jank\\\"</li>\\n<li>Modern accessibility tags</li>\\n</ul>\\n<h2>Running Lighthouse</h2>\\n<p>There are two ways to run a set of Lighthouse tests. One method is through a Chrome Extension, which you can install through the <a href=\\\"https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk\\\">Chrome Web Store</a> or as a Node module on <a href=\\\"https://www.npmjs.com/package/lighthouse\\\">NPM.</a></p>\\n<h2>Useful Links</h2>\\n<ul>\\n<li><a href=\\\"https://developers.google.com/web/tools/lighthouse/\\\">The Lighthouse tool on Google Developers</a></li>\\n<li><a href=\\\"https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk\\\">Lighthouse on the Chrome Web Store</a></li>\\n<li><a href=\\\"https://www.npmjs.com/package/lighthouse\\\">Lighthouse on NPM</a></li>\\n<li><a href=\\\"https://googlechrome.github.io/lighthouse/viewer/\\\">Lighthouse report Viewer</a></li>\\n</ul>\\n<p>And if you're interested in an example report, take a look at <a href=\\\"https://googlechrome.github.io/lighthouse/viewer/?gist=9573cb9302e15405026b40098c8fd342\\\">the report for www.psyked.co.uk</a></p>\",\"frontmatter\":{\"title\":\"Testing Performance, Speed and Best Practices with Lighthouse\",\"date\":\"January 28, 2017\",\"tags\":[\"performance\",\"testing\",\"progressive-web-apps\"],\"url\":null}}},\"pathContext\":{\"prev\":{\"frontmatter\":{\"path\":\"/blog/the-dom-monster/\",\"tags\":[\"javascript\"],\"title\":\"The DOM Monster\",\"image\":null,\"date\":\"2011-03-24T17:22:57.000Z\"}},\"next\":{\"frontmatter\":{\"path\":\"/blog/targeting-multiple-browsers-with-css-and-some-javascript-trickery/\",\"tags\":[\"css\",\"javascript\"],\"title\":\"Targeting multiple browsers with CSS... and some Javascript trickery.\",\"image\":null,\"date\":\"2009-11-28T08:00:19.000Z\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-testing-performance-speed-and-best-practices-with-lighthouse.json\n// module id = 1344\n// module chunks = 12158288722291"],"sourceRoot":""}