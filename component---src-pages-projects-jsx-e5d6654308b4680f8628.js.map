{"version":3,"sources":["webpack:///./src/pages/projects.jsx","webpack:///./src/components/ThemeSwitch.js","webpack:///./src/components/Header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Banner.js"],"names":["Speaking","render","_this$props$data","this","props","data","projects","allMarkdownRemark","edges","_this$props$data$site","site","siteMetadata","siteTitle","title","siteDescription","description","image","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","lang","name","content","_components_Banner__WEBPACK_IMPORTED_MODULE_4__","imageCredit","href","className","map","_ref","presentation","node","color","frontmatter","colors","vibrant","Fragment","style","border","borderWidth","padding","margin","childImageSharp","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","Object","assign","width","dangerouslySetInnerHTML","__html","html","Component","pageQuery","SwitchWrapper","styled","label","withConfig","displayName","componentId","Label","span","Handle","Input","input","ThemeSwitch","react_default","gatsby_plugin_dark_mode","theme","toggleTheme","type","onChange","e","target","checked","React","Header","header","Nav","nav","MenuLink","Link","Wrapper","div","HeaderComponent","to","activeClassName","exact","components_ThemeSwitch","Overlay","aside","TwitterLink","li","GitHubLink","LinkedInLink","MediumLink","InstagramLink","Footer","id","backgroundColor","colour","position","zIndex","index_esm","Template","_this$props","children","keyColour","muted","Helmet_default","components_Header","components_Footer","ImageContainer","figure","ImageWrapper","Img","ImageCredit","figcaption","Banner","background","date","imageCreditMarkdown","_objectWithoutPropertiesLoose","react__WEBPACK_IMPORTED_MODULE_5___default","minHeight","react_markdown__WEBPACK_IMPORTED_MODULE_9___default","source","renderers","paragraph","_ref2","format","Date"],"mappings":"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","file":"component---src-pages-projects-jsx-e5d6654308b4680f8628.js","sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport Banner from '../components/Banner'\nimport Layout from '../components/Layout'\n\nclass Speaking extends Component {\n  render() {\n    const {\n      data: {\n        allMarkdownRemark: { edges: projects },\n        site: {\n          siteMetadata: { title: siteTitle, description: siteDescription },\n        },\n        image,\n      },\n    } = this.props\n\n    return (\n      <Layout>\n        <Helmet\n          htmlAttributes={{\n            lang: 'en',\n          }}\n        >\n          <title>{siteTitle}</title>\n          <meta name=\"description\" content={siteDescription} />\n        </Helmet>\n\n        <Banner\n          title=\"Projects\"\n          image={image}\n          imageCredit={\n            <span>\n              <a href=\"https://unsplash.com/@eagleboobs?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">\n                Elliott Stallion\n              </a>{' '}\n              on{' '}\n              <a href=\"/s/photos/lathe?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">\n                Unsplash\n              </a>\n            </span>\n          }\n        />\n\n        <div className=\"bodyContainer\">\n          <div className=\"inner\">\n            <div className=\"bodyContent\">\n              <header className=\"major\">\n                <h2>Projects</h2>\n              </header>\n\n              <aside>This page is a total WIP</aside>\n            </div>\n\n            {projects.map(({ node: presentation }) => {\n              const color =\n                presentation.frontmatter.image &&\n                presentation.frontmatter.image.colors &&\n                presentation.frontmatter.image.colors.vibrant\n              return (\n                <>\n                  <hr />\n                  <div className=\"bodyContent\">\n                    <section\n                      style={{\n                        border: `.5em solid ${color}`,\n                        borderWidth: `0 .5em`,\n                        padding: `1em`,\n                        margin: `0 -.5em`,\n                      }}\n                    >\n                      <header>\n                        <h3>{presentation.frontmatter.title}</h3>\n                      </header>\n                      {presentation.frontmatter.image &&\n                        presentation.frontmatter.image.childImageSharp && (\n                          <Img\n                            style={{ width: '30%' }}\n                            {...presentation.frontmatter.image.childImageSharp}\n                          />\n                        )}\n                      <main\n                        dangerouslySetInnerHTML={{ __html: presentation.html }}\n                      />\n                    </section>\n                  </div>\n                </>\n              )\n            })}\n            <hr className=\"endPost\" />\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Speaking\n\nexport const pageQuery = graphql`\n  query ProjectsQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { layout: { eq: \"project\" } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          html\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            image {\n              childImageSharp {\n                sizes(maxWidth: 630) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n              colors {\n                ...GatsbyImageColors\n              }\n            }\n          }\n        }\n      }\n    }\n    image: file(\n      relativePath: { eq: \"elliott-stallion-EJoANIqIgyo-unsplash.jpg\" }\n    ) {\n      childImageSharp {\n        # Specify a fluid image and fragment\n        # The default maxWidth is 800 pixels\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n      colors {\n        ...GatsbyImageColors\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode'\nimport styled from 'styled-components'\n\nconst SwitchWrapper = styled.label`\n  background-color: white;\n  border-radius: 18px;\n  cursor: pointer;\n  display: inline-block;\n  height: 20px;\n  padding: 3px;\n  position: relative;\n  vertical-align: top;\n  width: 56px;\n  box-sizing: content-box;\n`\n\nconst Label = styled.span`\n  background: goldenrod none repeat scroll 0 0;\n  border-radius: inherit;\n  display: block;\n  font-size: 10px;\n  height: inherit;\n  position: relative;\n  text-transform: uppercase;\n  transition: all 0.15s ease-out 0s;\n\n  ::before,\n  ::after {\n    line-height: 1;\n    margin-top: -0.5em;\n    position: absolute;\n    top: 50%;\n    transition: inherit;\n  }\n`\n\nconst Handle = styled.span`\n  background-color: white;\n  border-radius: 10px;\n  height: 18px;\n  left: 4px;\n  position: absolute;\n  top: 4px;\n  transition: left 0.15s ease-out 0s;\n  width: 18px;\n\n  ::before {\n    // background-color: black;\n    border-radius: 6px;\n    content: '';\n    height: 12px;\n    left: 50%;\n    margin: -6px 0 0 -6px;\n    position: absolute;\n    top: 50%;\n    width: 12px;\n  }\n`\n\nconst Input = styled.input`\n  left: 0;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n\n  :checked ~ ${Label} {\n    background: black none repeat scroll 0 0;\n  }\n\n  :checked ~ ${Handle} {\n    left: 37px;\n  }\n`\n\nclass ThemeSwitch extends React.Component {\n  render() {\n    return (\n      <ThemeToggler>\n        {({ theme, toggleTheme }) => (\n          <SwitchWrapper className=\"switch\">\n            <Input\n              type=\"checkbox\"\n              onChange={e => toggleTheme(e.target.checked ? 'dark' : 'light')}\n              checked={theme === 'dark'}\n            />\n            <Label />\n            <Handle />\n          </SwitchWrapper>\n        )}\n      </ThemeToggler>\n    )\n  }\n}\n\nexport default ThemeSwitch\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport styled from 'styled-components'\n\nimport ThemeSwitch from './ThemeSwitch'\n\nconst Header = styled.header`\n  display: block;\n  background: hsl(240, 14%, 19%);\n  padding-left: calc((100vw - 60em) / 2);\n  padding-right: calc((100vw - 60em) / 2);\n`\n\nconst Nav = styled.nav`\n  max-width: 60em;\n  margin: 0 auto;\n  padding: 0.5em 0.2em 0.5em 0.7em;\n  width:100%;\n  display: block;\n`\n\nconst MenuLink = styled(Link)`\n  margin-right: 0.5em;\n  padding: 0.4em;\n\n  &,\n  a {\n    &,\n    :link,\n    :active,\n    :visited,\n    :hover {\n      color: hsl(240, 14%, 99%);\n    }\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &.active {\n    border-radius: 0.15em;\n    background-color: hsl(346, 88%, 52%);\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 1em;\n`\n\nconst HeaderComponent = props => (\n  <Header>\n    <Wrapper>\n      <Nav>\n        <MenuLink to=\"/\" activeClassName=\"active\" exact=\"true\">\n          Home\n        </MenuLink>\n        <MenuLink to=\"/blog/\" activeClassName=\"active\">\n          Blog Archive\n        </MenuLink>\n        {/* <MenuLink to=\"/projects/\" activeClassName=\"active\">\n          Projects\n        </MenuLink> */}\n        <MenuLink to=\"/speaking/\" activeClassName=\"active\">\n          Public Speaking\n        </MenuLink>\n      </Nav>\n      <ThemeSwitch />\n    </Wrapper>\n  </Header>\n)\n\nexport default HeaderComponent\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport {\n  FaGithub,\n  FaTwitter,\n  FaInstagram,\n  FaMedium,\n  FaLinkedin,\n} from 'react-icons/fa'\n\nconst Overlay = styled.aside`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0px;\n  left: 0px;\n  background: hsla(240, 100%, 12%, 0.6);\n  z-index: 1;\n`\n\nconst TwitterLink = styled.li`\n  background: #00acee;\n\n  a,\n  a:link,\n  a:active,\n  a:hover,\n  a:visited {\n    color: #ffffff;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst GitHubLink = styled.li`\n  background: #181818;\n\n  a,\n  a:link,\n  a:active,\n  a:hover,\n  a:visited {\n    color: #ffffff;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst LinkedInLink = styled.li`\n  background: #0077b5;\n\n  a,\n  a:link,\n  a:active,\n  a:hover,\n  a:visited {\n    color: #ffffff;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst MediumLink = styled.li`\n  background: #37b042;\n\n  a,\n  a:link,\n  a:active,\n  a:hover,\n  a:visited {\n    color: #ffffff;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst InstagramLink = styled.li`\n  background: #d6249f;\n  background: radial-gradient(\n    circle at 30% 107%,\n    #fdf497 0%,\n    #fdf497 5%,\n    #fd5949 45%,\n    #d6249f 60%,\n    #285aeb 90%\n  );\n\n  a,\n  a:link,\n  a:active,\n  a:hover,\n  a:visited {\n    color: #ffffff;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst Footer = (props) => (\n  <footer id=\"footer\" style={{\n    backgroundColor: props.colour || 'hsla(240, 100%, 12%, 0.6)',\n    position: 'relative',\n    padding: '1em 0 3em'\n  }}>\n    <Overlay />\n    <div className=\"bodyContainer\" style={{ zIndex: 2, position: 'relative', color: 'white' }}>\n      <div className=\"bodyContent\">\n        <h3>Elsewhere, on social media;</h3>\n        <ul className=\"external-profiles\">\n          <TwitterLink>\n            <a href=\"//twitter.com/psyked\">\n              <span>\n                <FaTwitter />\n                Twitter\n                        </span>\n            </a>\n          </TwitterLink>\n          <InstagramLink>\n            <a href=\"//instagram.com/psyked\">\n              <span>\n                <FaInstagram />\n                Instagram\n                        </span>\n            </a>\n          </InstagramLink>\n          <GitHubLink>\n            <a href=\"//github.com/psyked\">\n              <span>\n                <FaGithub />\n                GitHub\n                        </span>\n            </a>\n          </GitHubLink>\n          <LinkedInLink>\n            <a href=\"//linkedin.com/in/jamesford\">\n              <span>\n                <FaLinkedin />\n                LinkedIn\n                        </span>\n            </a>\n          </LinkedInLink>\n          <MediumLink>\n            <a href=\"//medium.com/@psyked\">\n              <span>\n                <FaMedium />\n                Medium\n                        </span>\n            </a>\n          </MediumLink>\n        </ul>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\n\nimport Header from './Header'\nimport Footer from './Footer'\n\nimport '../assets/scss/main.scss'\n\nclass Template extends React.Component {\n  render() {\n    const { children, keyColour } = this.props;\n\n    let colour;\n\n    if (keyColour && keyColour.muted) {\n      colour = keyColour.muted\n    }\n\n    return (\n      <>\n        <Helmet\n          htmlAttributes={{\n            lang: 'en',\n          }}\n        />\n        <Header />\n        <main>{children}</main>\n        <Footer colour={colour} />\n      </>\n    )\n  }\n}\n\nTemplate.propTypes = {\n  children: PropTypes.oneOf([PropTypes.node, PropTypes.func]),\n}\n\nexport default Template\n","import React from 'react'\n// import { withPrefix } from 'gatsby-link'\nimport Img from 'gatsby-image'\nimport { format } from 'date-fns'\nimport styled from 'styled-components'\nimport ReactMarkdown from 'react-markdown'\n\nconst Wrapper = styled.header`\n  background: center center / cover hsl(240, 100%, 12%);\n  position: relative;\n  padding-top: calc(68px + 2em);\n  padding-bottom: 3em;\n  padding-left: calc((100vw - 60em) / 2);\n  padding-right: calc((100vw - 60em) / 2);\n`\n\nconst Overlay = styled.aside`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0px;\n  left: 0px;\n  background: hsla(240, 100%, 12%, 0.6);\n  z-index: 1;\n`\n\nconst ImageContainer = styled.figure`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  // padding-left: calc((100vw - 60em) / 2);\n  // padding-right: calc((100vw - 60em) / 2);\n  height: 100%;\n  overflow: hidden;\n  margin:0;\n}`\n\nconst ImageWrapper = styled(Img)`\n  height: 100%;\n`\nconst ImageCredit = styled.figcaption`\n  position: absolute;\n  bottom: 1em;\n  // width: 100%;\n  right: 1.6em;\n  font-size: 0.6em;\n  color: white;\n  z-index: 2;\n  text-align: right;\n\n  // left: calc((100vw - 60em) / 2);\n  // right: calc((100vw - 60em) / 2);\n  // padding-right: 0;\n`\n\nconst Banner = ({\n  title,\n  date,\n  description,\n  image,\n  imageCredit,\n  imageCreditMarkdown,\n  ...props\n}) => {\n  let background\n  if (image) {\n    if (image.colors) {\n      if (image.colors.muted) {\n        background = image.colors.muted\n      }\n    }\n  }\n  return (\n    <Wrapper style={{ minHeight: '320px', background: background }} {...props}>\n      {image && image.childImageSharp && (\n        <ImageContainer>\n          <ImageWrapper {...image.childImageSharp} />\n          {!!imageCredit && (\n            <div style={{ position: 'relative' }}>\n              <ImageCredit>Cover image credit: {imageCredit}</ImageCredit>\n            </div>\n          )}\n          {!!imageCreditMarkdown && (\n            <div style={{ position: 'relative' }}>\n              <ImageCredit>\n                Cover image credit:{' '}\n                <ReactMarkdown\n                  source={imageCreditMarkdown}\n                  renderers={{\n                    paragraph: ({ children }) => <span>{children}</span>,\n                  }}\n                />\n              </ImageCredit>\n            </div>\n          )}\n        </ImageContainer>\n      )}\n      <Overlay />\n      <div\n        className=\"bodyContent\"\n        style={{\n          color: 'white',\n          position: 'relative',\n          zIndex: 2,\n        }}\n      >\n        {!!title && (\n          <header>\n            <h1>{title}</h1>\n          </header>\n        )}\n        {!!description && (\n          <div>\n            <h2>{description}</h2>\n          </div>\n        )}\n        {!!date && (\n          <aside>Published: {format(new Date(date), 'DD MMM YYYY')}</aside>\n        )}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default Banner\n"],"sourceRoot":""}