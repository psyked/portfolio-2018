{"version":3,"sources":["webpack:///./src/pages/projects.jsx"],"names":["Speaking","render","this","props","data","projects","allMarkdownRemark","edges","site","siteMetadata","siteTitle","title","siteDescription","description","image","htmlAttributes","lang","name","content","imageCredit","href","className","map","presentation","node","color","frontmatter","colors","vibrant","style","border","borderWidth","padding","margin","childImageSharp","width","dangerouslySetInnerHTML","__html","html","Component","pageQuery"],"mappings":"qPAQMA,E,gLACJC,OAAA,WAAU,IAAD,EASHC,KAAKC,MAPPC,KAC8BC,EAHzB,EAGHC,kBAAqBC,MAHlB,IAIHC,KACEC,aAAuBC,EALtB,EAKeC,MAA+BC,EAL9C,EAKiCC,YAEpCC,EAPG,EAOHA,MAIJ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,eAAgB,CACdC,KAAM,OAGR,+BAAQN,GACR,0BAAMO,KAAK,cAAcC,QAASN,KAGpC,kBAAC,IAAD,CACED,MAAM,WACNG,MAAOA,EACPK,YACE,8BACE,uBAAGC,KAAK,uGAAR,oBAEK,IAHP,KAIK,IACH,uBAAGA,KAAK,sFAAR,eAON,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,eACb,4BAAQA,UAAU,SAChB,yCAGF,4DAGDhB,EAASiB,KAAI,YAA6B,IAApBC,EAAmB,EAAzBC,KACTC,EACJF,EAAaG,YAAYZ,OACzBS,EAAaG,YAAYZ,MAAMa,QAC/BJ,EAAaG,YAAYZ,MAAMa,OAAOC,QACxC,OACE,oCACE,6BACA,yBAAKP,UAAU,eACb,6BACEQ,MAAO,CACLC,OAAO,cAAeL,EACtBM,YAAY,SACZC,QAAQ,MACRC,OAAO,YAGT,gCACE,4BAAKV,EAAaG,YAAYf,QAE/BY,EAAaG,YAAYZ,OACxBS,EAAaG,YAAYZ,MAAMoB,iBAC7B,kBAAC,IAAD,eACEL,MAAO,CAAEM,MAAO,QACZZ,EAAaG,YAAYZ,MAAMoB,kBAGzC,0BACEE,wBAAyB,CAAEC,OAAQd,EAAae,cAO5D,wBAAIjB,UAAU,gB,GApFHkB,aA4FRvC,YAER,IAAMwC,EAAS","file":"component---src-pages-projects-jsx-5335fe60217181bfecca.js","sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport Banner from '../components/Banner'\nimport Layout from '../components/Layout'\n\nclass Speaking extends Component {\n  render() {\n    const {\n      data: {\n        allMarkdownRemark: { edges: projects },\n        site: {\n          siteMetadata: { title: siteTitle, description: siteDescription },\n        },\n        image,\n      },\n    } = this.props\n\n    return (\n      <Layout>\n        <Helmet\n          htmlAttributes={{\n            lang: 'en',\n          }}\n        >\n          <title>{siteTitle}</title>\n          <meta name=\"description\" content={siteDescription} />\n        </Helmet>\n\n        <Banner\n          title=\"Projects\"\n          image={image}\n          imageCredit={\n            <span>\n              <a href=\"https://unsplash.com/@eagleboobs?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">\n                Elliott Stallion\n              </a>{' '}\n              on{' '}\n              <a href=\"/s/photos/lathe?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">\n                Unsplash\n              </a>\n            </span>\n          }\n        />\n\n        <div className=\"bodyContainer\">\n          <div className=\"inner\">\n            <div className=\"bodyContent\">\n              <header className=\"major\">\n                <h2>Projects</h2>\n              </header>\n\n              <aside>This page is a total WIP</aside>\n            </div>\n\n            {projects.map(({ node: presentation }) => {\n              const color =\n                presentation.frontmatter.image &&\n                presentation.frontmatter.image.colors &&\n                presentation.frontmatter.image.colors.vibrant\n              return (\n                <>\n                  <hr />\n                  <div className=\"bodyContent\">\n                    <section\n                      style={{\n                        border: `.5em solid ${color}`,\n                        borderWidth: `0 .5em`,\n                        padding: `1em`,\n                        margin: `0 -.5em`,\n                      }}\n                    >\n                      <header>\n                        <h3>{presentation.frontmatter.title}</h3>\n                      </header>\n                      {presentation.frontmatter.image &&\n                        presentation.frontmatter.image.childImageSharp && (\n                          <Img\n                            style={{ width: '30%' }}\n                            {...presentation.frontmatter.image.childImageSharp}\n                          />\n                        )}\n                      <main\n                        dangerouslySetInnerHTML={{ __html: presentation.html }}\n                      />\n                    </section>\n                  </div>\n                </>\n              )\n            })}\n            <hr className=\"endPost\" />\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Speaking\n\nexport const pageQuery = graphql`\n  query ProjectsQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { layout: { eq: \"project\" } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          html\n          frontmatter {\n            date(formatString: \"MMMM dd, YYYY\")\n            path\n            title\n            image {\n              childImageSharp {\n                sizes(maxWidth: 630) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n              colors {\n                ...GatsbyImageColors\n              }\n            }\n          }\n        }\n      }\n    }\n    image: file(\n      relativePath: { eq: \"elliott-stallion-EJoANIqIgyo-unsplash.jpg\" }\n    ) {\n      childImageSharp {\n        # Specify a fluid image and fragment\n        # The default maxWidth is 800 pixels\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n      colors {\n        ...GatsbyImageColors\n      }\n    }\n  }\n`\n"],"sourceRoot":""}