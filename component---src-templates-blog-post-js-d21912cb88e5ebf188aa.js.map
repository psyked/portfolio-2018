{"version":3,"sources":["webpack:///./src/components/Tiles.js","webpack:///./src/components/Tags.js","webpack:///./src/components/SourcePost.js","webpack:///./src/templates/blog-post.js","webpack:///./src/components/ThemeSwitch.js","webpack:///./src/components/Header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Banner.js"],"names":["Tiles","_ref","tiles","react_default","a","createElement","className","styles","tileContainer","filter","tile","map","index","key","gatsby_link_default","to","frontmatter","path","image","childImageSharp","imageContainer","gatsby_image_default","sizes","outerWrapperClassName","wrapper","blackout","link","title","description","date","format","Date","PostTags","tags","tagsLabel","tag","slug","replace","toLowerCase","length","SourcePost","url","root","href","BlogPostTemplate","render","post","this","props","data","markdownRemark","_ref$frontmatter","_ref2$frontmatter","siteTitle","get","imageCredit","_this$props$pageConte","pageContext","next","prev","Layout","Helmet_default","htmlAttributes","lang","name","content","creator","src","Banner","Object","assign","imageCreditMarkdown","dangerouslySetInnerHTML","__html","html","components_SourcePost","Tags","components_Tiles","React","Component","pageQuery","SwitchWrapper","styled","label","withConfig","displayName","componentId","Label","span","Handle","Input","input","ThemeSwitch","gatsby_plugin_dark_mode","theme","toggleTheme","type","onChange","e","target","checked","Header","header","Nav","nav","MenuLink","Link","Wrapper","div","HeaderComponent","activeClassName","exact","components_ThemeSwitch","Footer","id","Template","children","Fragment","components_Header","components_Footer","Overlay","aside","ImageContainer","figure","ImageWrapper","Img","ImageCredit","figcaption","background","_objectWithoutPropertiesLoose","colors","muted","react__WEBPACK_IMPORTED_MODULE_5___default","style","minHeight","position","react_markdown__WEBPACK_IMPORTED_MODULE_9___default","source","renderers","paragraph","_ref2","color","zIndex"],"mappings":"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","file":"component---src-templates-blog-post-js-d21912cb88e5ebf188aa.js","sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport Img from 'gatsby-image'\nimport { format } from 'date-fns'\n\nimport styles from './tiles.module.scss'\n\nconst Tiles = ({ tiles }) => {\n  return (\n    <aside className={`${styles.tileContainer}`}>\n      {tiles &&\n        tiles\n          .filter(tile => !!tile)\n          .map((tile, index) => {\n            return (\n              <section key={index} className={styles.tile}>\n                <Link to={tile.frontmatter.path}>\n                  {tile.frontmatter.image &&\n                    tile.frontmatter.image.childImageSharp && (\n                      <aside className={styles.imageContainer}>\n                        <Img\n                          sizes={tile.frontmatter.image.childImageSharp.sizes}\n                          outerWrapperClassName={styles.wrapper}\n                          className={styles.wrapper}\n                        />\n                      </aside>\n                    )}\n                  <div className={styles.blackout} />\n                  <h3 className={styles.link}>{tile.frontmatter.title}</h3>\n                  <p className={styles.description}>\n                    {tile.frontmatter.description}\n                  </p>\n                  <p className={styles.date}>\n                    {format(new Date(tile.frontmatter.date), 'DD MMM YYYY')}\n                  </p>\n                </Link>\n              </section>\n            )\n          })}\n    </aside>\n  )\n}\n\nexport default Tiles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Link from 'gatsby-link'\n\nimport styles from './tags.module.scss'\n\nconst PostTags = ({ tags }) => {\n    if (!tags) return <aside />\n    return (\n        <aside>\n            <span className={styles.tagsLabel}>Tagged as:</span>\n            {tags.map((tag, index) => {\n                const slug = tag\n                    .replace(/\\W/gi, '-')\n                    .toLowerCase()\n                return (\n                    <span key={tag} className={styles.tag}>\n                        <Link to={`/tag/${slug}`}>{tag}</Link>\n                        {(index !== tags.length - 1) &&\n                            (\n                                <span>, </span>\n                            )\n                        }\n                    </span>\n                )\n            })}\n        </aside>\n    )\n}\n\nPostTags.propTypes = {\n    tags: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default PostTags","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './sourcepost.module.scss'\n\nconst SourcePost = ({ url }) => {\n    if (!url) return <aside />\n    return (\n        <aside className={styles.root}>\n            This article was originally published at <a href={url}>{url}</a>\n        </aside>\n    )\n}\n\nSourcePost.propTypes = {\n\n}\n\nexport default SourcePost","import React from 'react'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport { graphql } from 'gatsby'\n\nimport Banner from '../components/Banner'\nimport Tiles from '../components/Tiles'\nimport Tags from '../components/Tags'\nimport SourcePost from '../components/SourcePost'\nimport Layout from '../components/Layout'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark || {}\n    const { frontmatter: { title, tags, url, image, description } = {} } =\n      post || {}\n    const { frontmatter = {} } = post || {}\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const imageCredit = get(frontmatter, 'image_credit')\n    const { next, prev } = this.props.pageContext\n\n    return (\n      <Layout>\n        <Helmet\n          title={`${title} | ${siteTitle}`}\n          htmlAttributes={{\n            lang: 'en',\n          }}\n        >\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta name=\"twitter:site\" content=\"@psyked\" />\n          <meta name=\"twitter:creator\" content={frontmatter.creator} />\n          <meta name=\"twitter:title\" content={title} />\n          <meta name=\"twitter:description\" content={description} />\n          {image && image.childImageSharp && (\n            <meta\n              name=\"twitter:image\"\n              content={image.childImageSharp.sizes.src}\n            />\n          )}\n        </Helmet>\n        <Banner {...frontmatter} imageCreditMarkdown={imageCredit} />\n        <div className=\"bodyContainer\">\n          <div className=\"inner\">\n            <div className=\"bodyContent\">\n              <div dangerouslySetInnerHTML={{ __html: post.html }} />\n              <hr className=\"endPost\" />\n              <SourcePost url={url} />\n              <Tags tags={tags} />\n            </div>\n          </div>\n        </div>\n        <Tiles tiles={[next, prev]} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        url\n        image {\n          childImageSharp {\n            sizes(maxWidth: 630) {\n              ...GatsbyImageSharpSizes\n            }\n          }\n          colors {\n            ...GatsbyImageColors\n          }\n        }\n        description\n        image_credit\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode'\nimport styled from 'styled-components'\n\nconst SwitchWrapper = styled.label`\n  background-color: #ddd;\n  border-radius: 18px;\n  cursor: pointer;\n  display: inline-block;\n  height: 20px;\n  padding: 3px;\n  position: relative;\n  vertical-align: top;\n  width: 56px;\n  box-sizing: content-box;\n`\n\nconst Label = styled.span`\n  background: #ffd700 none repeat scroll 0 0;\n  border-radius: inherit;\n  display: block;\n  font-size: 10px;\n  height: inherit;\n  position: relative;\n  text-transform: uppercase;\n  transition: all 0.15s ease-out 0s;\n\n  ::before,\n  ::after {\n    line-height: 1;\n    margin-top: -0.5em;\n    position: absolute;\n    top: 50%;\n    transition: inherit;\n  }\n`\n\nconst Handle = styled.span`\n  background-color: #fff;\n  border-radius: 10px;\n  height: 18px;\n  left: 4px;\n  position: absolute;\n  top: 4px;\n  transition: left 0.15s ease-out 0s;\n  width: 18px;\n\n  ::before {\n    background-color: #f9f9f9;\n    border-radius: 6px;\n    content: '';\n    height: 12px;\n    left: 50%;\n    margin: -6px 0 0 -6px;\n    position: absolute;\n    top: 50%;\n    width: 12px;\n  }\n`\n\nconst Input = styled.input`\n  left: 0;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n\n  :checked ~ ${Label} {\n    background: #eceeef none repeat scroll 0 0;\n  }\n\n  :checked ~ ${Handle} {\n    left: 40px;\n  }\n`\n\nclass ThemeSwitch extends React.Component {\n  render() {\n    return (\n      <ThemeToggler>\n        {({ theme, toggleTheme }) => (\n          <SwitchWrapper className=\"switch\">\n            <Input\n              type=\"checkbox\"\n              onChange={e => toggleTheme(e.target.checked ? 'dark' : 'light')}\n              checked={theme === 'dark'}\n            />\n            <Label />\n            <Handle />\n          </SwitchWrapper>\n        )}\n      </ThemeToggler>\n    )\n  }\n}\n\nexport default ThemeSwitch\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport styled from 'styled-components'\n\nimport ThemeSwitch from './ThemeSwitch'\n\nconst Header = styled.header`\n  display: block;\n  background: hsl(240, 14%, 19%);\n  padding-left: calc((100vw - 60em) / 2);\n  padding-right: calc((100vw - 60em) / 2);\n`\n\nconst Nav = styled.nav`\n  max-width: 60em;\n  margin: 0 auto;\n  padding: 0.5em 0.2em 0.5em 0.7em;\n  width:100%;\n  display: block;\n`\n\nconst MenuLink = styled(Link)`\n  margin-right: 0.5em;\n  padding: 0.4em;\n\n  &,\n  a {\n    &,\n    :link,\n    :active,\n    :visited,\n    :hover {\n      color: hsl(240, 14%, 99%);\n    }\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &.active {\n    border-radius: 0.15em;\n    background-color: hsl(346, 88%, 52%);\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 1em;\n`\n\nconst HeaderComponent = props => (\n  <Header>\n    <Wrapper>\n      <Nav>\n        <MenuLink to=\"/\" activeClassName=\"active\" exact=\"true\">\n          Home\n        </MenuLink>\n        <MenuLink to=\"/blog/\" activeClassName=\"active\">\n          Blog Archive\n        </MenuLink>\n        <MenuLink to=\"/speaking/\" activeClassName=\"active\">\n          Public Speaking\n        </MenuLink>\n      </Nav>\n      <ThemeSwitch />\n    </Wrapper>\n  </Header>\n)\n\nexport default HeaderComponent\n","import React from 'react'\n\nconst Footer = (props) => (\n    <footer id=\"footer\">\n        {/* <div className=\"inner\">\n            <ul className=\"icons large\">\n                <li><a href=\"//twitter.com/psyked\" className=\"icon fa-twitter\"><span className=\"label\">Twitter</span></a></li>\n                <li><a href=\"//instagram.com/psyked\" className=\"icon fa-instagram\"><span className=\"label\">Instagram</span></a></li>\n                <li><a href=\"//github.com/psyked\" className=\"icon fa-github\"><span className=\"label\">GitHub</span></a></li>\n                <li><a href=\"//linkedin.com/in/jamesford\" className=\"icon fa-linkedin\"><span className=\"label\">LinkedIn</span></a></li>\n                <li><a href=\"//medium.com/@psyked\" className=\"icon fa-medium\"><span className=\"label\">Medium</span></a></li>\n            </ul>\n        </div> */}\n    </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\n\nimport Header from './Header'\nimport Footer from './Footer'\n\nimport '../assets/scss/main.scss'\n\nclass Template extends React.Component {\n  render() {\n    const { children } = this.props\n\n    return (\n      <>\n        <Helmet\n          htmlAttributes={{\n            lang: 'en',\n          }}\n        />\n        <Header />\n        <main>{children}</main>\n        <Footer />\n      </>\n    )\n  }\n}\n\nTemplate.propTypes = {\n  children: PropTypes.oneOf([PropTypes.node, PropTypes.func]),\n}\n\nexport default Template\n","import React from 'react'\n// import { withPrefix } from 'gatsby-link'\nimport Img from 'gatsby-image'\nimport { format } from 'date-fns'\nimport styled from 'styled-components'\nimport ReactMarkdown from 'react-markdown'\n\nconst Wrapper = styled.header`\n  background: center center / cover hsl(240, 100%, 12%);\n  position: relative;\n  padding-top: calc(68px + 2em);\n  padding-bottom: 3em;\n  padding-left: calc((100vw - 60em) / 2);\n  padding-right: calc((100vw - 60em) / 2);\n`\n\nconst Overlay = styled.aside`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0px;\n  left: 0px;\n  background: hsla(240, 100%, 12%, 0.6);\n  z-index: 1;\n`\n\nconst ImageContainer = styled.figure`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  padding-left: calc((100vw - 60em) / 2);\n  padding-right: calc((100vw - 60em) / 2);\n  height: 100%;\n  overflow: hidden;\n  margin:0;\n}`\n\nconst ImageWrapper = styled(Img)`\n  height: 100%;\n`\nconst ImageCredit = styled.figcaption`\n  position: absolute;\n  bottom: 1em;\n  // width: 100%;\n  right: 1.6em;\n  font-size: 0.6em;\n  color: white;\n  z-index: 2;\n  text-align: right;\n\n  // left: calc((100vw - 60em) / 2);\n  // right: calc((100vw - 60em) / 2);\n  // padding-right: 0;\n`\n\nconst Banner = ({\n  title,\n  date,\n  description,\n  image,\n  imageCredit,\n  imageCreditMarkdown,\n  ...props\n}) => {\n  let background\n  if (image) {\n    if (image.colors) {\n      if (image.colors.muted) {\n        background = image.colors.muted\n      }\n    }\n  }\n  return (\n    <Wrapper style={{ minHeight: '320px', background: background }} {...props}>\n      {image && image.childImageSharp && (\n        <ImageContainer>\n          <ImageWrapper {...image.childImageSharp} />\n          {!!imageCredit && (\n            <div style={{ position: 'relative' }}>\n              <ImageCredit>Cover image credit: {imageCredit}</ImageCredit>\n            </div>\n          )}\n          {!!imageCreditMarkdown && (\n            <div style={{ position: 'relative' }}>\n              <ImageCredit>\n                Cover image credit:{' '}\n                <ReactMarkdown\n                  source={imageCreditMarkdown}\n                  renderers={{\n                    paragraph: ({ children }) => <span>{children}</span>,\n                  }}\n                />\n              </ImageCredit>\n            </div>\n          )}\n        </ImageContainer>\n      )}\n      <Overlay />\n      <div\n        className=\"bodyContent\"\n        style={{\n          color: 'white',\n          position: 'relative',\n          zIndex: 2,\n        }}\n      >\n        {!!title && (\n          <header>\n            <h1>{title}</h1>\n          </header>\n        )}\n        {!!description && (\n          <div>\n            <h2>{description}</h2>\n          </div>\n        )}\n        {!!date && (\n          <aside>Published: {format(new Date(date), 'DD MMM YYYY')}</aside>\n        )}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default Banner\n"],"sourceRoot":""}