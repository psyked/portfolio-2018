webpackJsonp([0x9492712693cc],{1078:function(e,a){e.exports={data:{site:{siteMetadata:{title:"Gatsby Starter - Forty by HTML5 UP",author:"Hunter Chang"}},markdownRemark:{id:"/Users/James/Repositories/portfolio-2018/src/posts/embossed-shadowed-text-in-flex/index.md absPath of file >>> MarkdownRemark",html:'<p>If you get it right, drop shadow effects can really improve the appearance and clarity of text.  <a href="http://markstar.co.uk/blog/" target="_blank">Mark</a> sent me the starting code for this a little gem a while ago, but I\'ve extended it to support Flexs\' CSS Styles support, and have been playing with different settings, which - with a bit of creativity - will give you anything from drop shadows to a bevelled appearance.</p>\n<p>There are 4 classes we\'ve created which are extensions to 4 basic Flex components - ShadowButton, ShadowLabel, ShadowText and ShadowText.  To each you can customise the shadows\' distance, angle, colour, alpha and blur amount.  Here\'s some examples of the usage, and output of these classes;</p>\n<h3>Bevelled text:</h3>\n[kml_flashembed movie="http://uploads.psyked.co.uk/2009/11/BevelTextExample.swf" height="206" width="500" /]\n<pre><code>ShadowLabel, ShadowButton, ShadowText, ShadowCheckBox\n{\nshadowColor: #ffffff;\n} </code></pre>\n<h3>Drop shadowed text:</h3>\n[kml_flashembed movie="http://uploads.psyked.co.uk/2009/11/ShadowTextExample.swf" height="206" width="500" /]\n<pre><code>ShadowLabel, ShadowButton, ShadowText, ShadowCheckBox\n{\nshadowColor: #333333;\n}</code></pre>\n<p>Aside from changing the background colour to make it all a little easier to see the final result, that\'s just a single variable in the CSS we\'ve changed.\nAll we\'re actually doing is adding a Flash Player filter to the text objects, but we\'ve extended and hooked into the Flex component lifecycle to make things a little more flexible and reusable.</p>\n<h3>ShadowLabel</h3>\n<pre><code>package couk.psyked\n{\nimport flash.filters.DropShadowFilter;\nimport mx.controls.Label;\n<p>public class ShadowLabel extends Label\n{\n[Inspectable( defaultValue=1 )]\npublic var shadowDistance:Number = 1;</p>\n<p>[Inspectable( defaultValue=45 )]\npublic var shadowAngle:Number = 45;</p>\n<p>[Inspectable( defaultValue=0x003333 )]\npublic var shadowColor:Number = 0x003333;</p>\n<p>[Inspectable( defaultValue=1 )]\npublic var shadowAlpha:Number = 1;</p>\n<p>[Inspectable( defaultValue=0 )]\npublic var shadowBlur:Number = 0;</p>\n<p>public function ShadowLabel()\n{\nsuper();\n}</p>\n<p>override protected function updateDisplayList( unscaledWidth:Number, unscaledHeight:Number ):void\n{\nsuper.updateDisplayList( unscaledWidth, unscaledHeight );</p>\n<p>if ( getStyle( "shadowDistance" ))\n{\nshadowDistance = getStyle( "shadowDistance" );\n}</p>\n<p>if ( getStyle( "shadowAngle" ))\n{\nshadowAngle = getStyle( "shadowAngle" );\n}</p>\n<p>if ( getStyle( "shadowColor" ))\n{\nshadowColor = getStyle( "shadowColor" );\n}</p>\n<p>if ( getStyle( "shadowAlpha" ))\n{\nshadowAlpha = getStyle( "shadowAlpha" );\n}</p>\n<p>if ( getStyle( "shadowBlur" ))\n{\nshadowBlur = getStyle( "shadowBlur" );\n}</p>\n<p>textField.filters = [ new DropShadowFilter( shadowDistance, shadowAngle, shadowColor, shadowAlpha, shadowBlur, shadowBlur )];\n}</p>\n<p>override protected function commitProperties():void\n{\nsuper.commitProperties();\ntextField.filters = [ new DropShadowFilter( shadowDistance, shadowAngle, shadowColor, shadowAlpha, shadowBlur, shadowBlur )];\n}\n}\n}</code></pre></p>\n<h3>ShadowText</h3>\n<pre><code>package couk.psyked\n{\nimport flash.filters.DropShadowFilter;\nimport mx.controls.Text;\n<p>public class ShadowText extends Text\n{\n[Inspectable( defaultValue=1 )]\npublic var shadowDistance:Number = 1;</p>\n<p>[Inspectable( defaultValue=45 )]\npublic var shadowAngle:Number = 45;</p>\n<p>[Inspectable( defaultValue=0x003333 )]\npublic var shadowColor:Number = 0x003333;</p>\n<p>[Inspectable( defaultValue=1 )]\npublic var shadowAlpha:Number = 1;</p>\n<p>[Inspectable( defaultValue=0 )]\npublic var shadowBlur:Number = 0;</p>\n<p>public function ShadowText()\n{\nsuper();\n}</p>\n<p>override protected function updateDisplayList( unscaledWidth:Number, unscaledHeight:Number ):void\n{\nsuper.updateDisplayList( unscaledWidth, unscaledHeight );</p>\n<p>if ( getStyle( "shadowDistance" ))\n{\nshadowDistance = getStyle( "shadowDistance" );\n}</p>\n<p>if ( getStyle( "shadowAngle" ))\n{\nshadowAngle = getStyle( "shadowAngle" );\n}</p>\n<p>if ( getStyle( "shadowColor" ))\n{\nshadowColor = getStyle( "shadowColor" );\n}</p>\n<p>if ( getStyle( "shadowAlpha" ))\n{\nshadowAlpha = getStyle( "shadowAlpha" );\n}</p>\n<p>if ( getStyle( "shadowBlur" ))\n{\nshadowBlur = getStyle( "shadowBlur" );\n}\ntextField.filters = [ new DropShadowFilter( shadowDistance, shadowAngle, shadowColor, shadowAlpha, shadowBlur, shadowBlur )];\n}</p>\n<p>override protected function commitProperties():void\n{\nsuper.commitProperties();\ntextField.filters = [ new DropShadowFilter( shadowDistance, shadowAngle, shadowColor, shadowAlpha, shadowBlur, shadowBlur )];\n}\n}\n}</code></pre></p>\n<h3>ShadowCheckBox</h3>\n<pre><code>package couk.psyked\n{\nimport flash.filters.DropShadowFilter;\nimport mx.controls.CheckBox;\n<p>public class ShadowCheckBox extends CheckBox\n{\n[Inspectable( defaultValue=1 )]\npublic var shadowDistance:Number = 1;</p>\n<p>[Inspectable( defaultValue=45 )]\npublic var shadowAngle:Number = 45;</p>\n<p>[Inspectable( defaultValue=0x003333 )]\npublic var shadowColor:Number = 0x003333;</p>\n<p>[Inspectable( defaultValue=1 )]\npublic var shadowAlpha:Number = 1;</p>\n<p>[Inspectable( defaultValue=0 )]\npublic var shadowBlur:Number = 0;</p>\n<p>public function ShadowCheckBox()\n{\nsuper();\n}</p>\n<p>override protected function updateDisplayList( unscaledWidth:Number, unscaledHeight:Number ):void\n{\nsuper.updateDisplayList( unscaledWidth, unscaledHeight );</p>\n<p>if ( getStyle( "shadowDistance" ))\n{\nshadowDistance = getStyle( "shadowDistance" );\n}</p>\n<p>if ( getStyle( "shadowAngle" ))\n{\nshadowAngle = getStyle( "shadowAngle" );\n}</p>\n<p>if ( getStyle( "shadowColor" ))\n{\nshadowColor = getStyle( "shadowColor" );\n}</p>\n<p>if ( getStyle( "shadowAlpha" ))\n{\nshadowAlpha = getStyle( "shadowAlpha" );\n}</p>\n<p>if ( getStyle( "shadowBlur" ))\n{\nshadowBlur = getStyle( "shadowBlur" );\n}\ntextField.filters = [ new DropShadowFilter( shadowDistance, shadowAngle, shadowColor, shadowAlpha, shadowBlur, shadowBlur )];\n}</p>\n<p>override protected function commitProperties():void\n{\nsuper.commitProperties();\ntextField.filters = [ new DropShadowFilter( shadowDistance, shadowAngle, shadowColor, shadowAlpha, shadowBlur, shadowBlur )];\n}</p>\n<p>}\n}</code></pre></p>\n<h3>ShadowButton</h3>\n<pre><code>package couk.psyked\n{\nimport flash.filters.DropShadowFilter;\nimport mx.controls.Button;\n<p>public class ShadowButton extends Button\n{\n[Inspectable( defaultValue=1 )]\npublic var shadowDistance:Number = 1;</p>\n<p>[Inspectable( defaultValue=45 )]\npublic var shadowAngle:Number = 45;</p>\n<p>[Inspectable( defaultValue=0x003333 )]\npublic var shadowColor:Number = 0x003333;</p>\n<p>[Inspectable( defaultValue=1 )]\npublic var shadowAlpha:Number = 1;</p>\n<p>[Inspectable( defaultValue=0 )]\npublic var shadowBlur:Number = 0;</p>\n<p>public function ShadowButton()\n{\nsuper();\n}</p>\n<p>override protected function updateDisplayList( unscaledWidth:Number, unscaledHeight:Number ):void\n{\nsuper.updateDisplayList( unscaledWidth, unscaledHeight );</p>\n<p>if ( getStyle( "shadowDistance" ))\n{\nshadowDistance = getStyle( "shadowDistance" );\n}</p>\n<p>if ( getStyle( "shadowAngle" ))\n{\nshadowAngle = getStyle( "shadowAngle" );\n}</p>\n<p>if ( getStyle( "shadowColor" ))\n{\nshadowColor = getStyle( "shadowColor" );\n}</p>\n<p>if ( getStyle( "shadowAlpha" ))\n{\nshadowAlpha = getStyle( "shadowAlpha" );\n}</p>\n<p>if ( getStyle( "shadowBlur" ))\n{\nshadowBlur = getStyle( "shadowBlur" );\n}\ntextField.filters = [ new DropShadowFilter( shadowDistance, shadowAngle, shadowColor, shadowAlpha, shadowBlur, shadowBlur )];\n}</p>\n<p>override protected function commitProperties():void\n{\nsuper.commitProperties();\ntextField.filters = [ new DropShadowFilter( shadowDistance, shadowAngle, shadowColor, shadowAlpha, shadowBlur, shadowBlur )];\n}</p>\n<p>}\n}</code></pre></p>',frontmatter:{title:"Embossed / Shadowed text in Flex",date:"November 09, 2009",tags:["flex"]}}},pathContext:{}}}});
//# sourceMappingURL=path---blog-embossed-shadowed-text-in-flex-2a79c14dda0e8ebc480f.js.map