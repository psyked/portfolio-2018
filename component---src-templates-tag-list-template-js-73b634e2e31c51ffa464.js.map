{"version":3,"sources":["webpack:///./src/templates/tag-list-template.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","className","to","map","node","frontmatter","path","title","key","pageQuery"],"mappings":"2FAAA,2GA6DeA,UApDF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,kBAAC,IAAD,KACE,yBAAKK,UAAU,iBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAMC,GAAG,SAAT,YACA,4BAAKF,GACL,4BACGF,EAAMK,KAAI,YAAe,IAAD,IAAXC,KACiBC,YAArBC,EADe,EACfA,KAAMC,EADS,EACTA,MACd,OACE,wBAAIC,IAAKF,GACP,kBAAC,IAAD,CAAMJ,GAAII,GAAOC,aAmC9B,IAAME,EAAS","file":"component---src-templates-tag-list-template-js-73b634e2e31c51ffa464.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\n// Components\nimport Link from 'gatsby-link'\n\nimport Layout from '../components/Layout'\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <div className=\"bodyContainer\">\n        <div className=\"inner\">\n          <div className=\"bodyContent\">\n            <Link to=\"/tags\">All tags</Link>\n            <h1>{tagHeader}</h1>\n            <ul>\n              {edges.map(({ node }) => {\n                const { path, title } = node.frontmatter\n                return (\n                  <li key={path}>\n                    <Link to={path}>{title}</Link>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { layout: { eq: \"post\" }, tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}