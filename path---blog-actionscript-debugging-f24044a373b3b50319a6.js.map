{"version":3,"sources":["webpack:///path---blog-actionscript-debugging-f24044a373b3b50319a6.js","webpack:///./.cache/json/blog-actionscript-debugging.json"],"names":["webpackJsonp","1075","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","tags","url","pathContext","prev","path","image","next"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,eAAAC,OAAA,eAA8CC,gBAAmBC,GAAA,wHAAAC,KAAA,u5BAA4gCC,aAAgCL,MAAA,yBAAAM,KAAA,oBAAAC,MAAA,gBAAAC,IAAA,QAAiGC,aAAgBC,MAAQL,aAAeM,KAAA,4CAAAJ,MAAA,aAAAP,MAAA,uCAAAY,MAAA,KAAAN,KAAA,6BAAuKO,MAASR,aAAeM,KAAA,sDAAAJ,MAAA,uCAAAP,MAAA,iDAAAY,MAAA,KAAAN,KAAA","file":"path---blog-actionscript-debugging-f24044a373b3b50319a6.js","sourcesContent":["webpackJsonp([88515143727939],{\n\n/***/ 1075:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Psyked.co.uk\",\"author\":\"James Ford\"}},\"markdownRemark\":{\"id\":\"/Users/James/Repositories/portfolio-2018/src/posts/actionscript-debugging/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>This is a simple little segment of code that i find very useful to work my way through flash files. It basically lists all the properties (which includes direct children) of the target movieclip. Here's a few implimentations...</p>\\n<p>(Set <code>n</code> beforehand with something like <code>var n = my_mc</code>)</p>\\n<pre><code>for(var i in n){\\ntrace(i+\\\" : \\\"+n[i]);\\n};\\n</code></pre>\\n<p>and thats it in a nutshell. Your output will be something like this;</p>\\n<pre><code>property : value\\n</code></pre>\\n<p>Ok, so thats not a very good example, but try it and you'll see.\\nHere's a function-based version for you...</p>\\n<pre><code>traceProperties = function(movieclip){\\nn = movieclip;\\nfor(i in n){\\ntrace(i+\\\" : \\\"+n[i]);\\n}\\n}\\n</code></pre>\\n<p>and it's Actionscript 2.0 sibling...</p>\\n<pre><code>function traceProperties(n:Object):Void{\\nfor(var i in n){\\ntrace(i+\\\" : \\\"+n[i]);\\n}\\n}\\n</code></pre>\",\"frontmatter\":{\"title\":\"ActionScript Debugging\",\"date\":\"February 28, 2007\",\"tags\":[\"actionscript\"],\"url\":null}}},\"pathContext\":{\"prev\":{\"frontmatter\":{\"path\":\"/blog/adm-application-descriptor-manager/\",\"tags\":[\"adobe-air\"],\"title\":\"ADM - Application Descriptor Manager\",\"image\":null,\"date\":\"2008-12-02T09:00:22.000Z\"}},\"next\":{\"frontmatter\":{\"path\":\"/blog/actionscript-30-lets-you-work-with-zip-files/\",\"tags\":[\"actionscript\",\"external-links\",\"zip\"],\"title\":\"ActionScript 3.0 lets you work with ZIP files?\",\"image\":null,\"date\":\"2007-08-09T13:06:03.000Z\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-actionscript-debugging-f24044a373b3b50319a6.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Psyked.co.uk\",\"author\":\"James Ford\"}},\"markdownRemark\":{\"id\":\"/Users/James/Repositories/portfolio-2018/src/posts/actionscript-debugging/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>This is a simple little segment of code that i find very useful to work my way through flash files. It basically lists all the properties (which includes direct children) of the target movieclip. Here's a few implimentations...</p>\\n<p>(Set <code>n</code> beforehand with something like <code>var n = my_mc</code>)</p>\\n<pre><code>for(var i in n){\\ntrace(i+\\\" : \\\"+n[i]);\\n};\\n</code></pre>\\n<p>and thats it in a nutshell. Your output will be something like this;</p>\\n<pre><code>property : value\\n</code></pre>\\n<p>Ok, so thats not a very good example, but try it and you'll see.\\nHere's a function-based version for you...</p>\\n<pre><code>traceProperties = function(movieclip){\\nn = movieclip;\\nfor(i in n){\\ntrace(i+\\\" : \\\"+n[i]);\\n}\\n}\\n</code></pre>\\n<p>and it's Actionscript 2.0 sibling...</p>\\n<pre><code>function traceProperties(n:Object):Void{\\nfor(var i in n){\\ntrace(i+\\\" : \\\"+n[i]);\\n}\\n}\\n</code></pre>\",\"frontmatter\":{\"title\":\"ActionScript Debugging\",\"date\":\"February 28, 2007\",\"tags\":[\"actionscript\"],\"url\":null}}},\"pathContext\":{\"prev\":{\"frontmatter\":{\"path\":\"/blog/adm-application-descriptor-manager/\",\"tags\":[\"adobe-air\"],\"title\":\"ADM - Application Descriptor Manager\",\"image\":null,\"date\":\"2008-12-02T09:00:22.000Z\"}},\"next\":{\"frontmatter\":{\"path\":\"/blog/actionscript-30-lets-you-work-with-zip-files/\",\"tags\":[\"actionscript\",\"external-links\",\"zip\"],\"title\":\"ActionScript 3.0 lets you work with ZIP files?\",\"image\":null,\"date\":\"2007-08-09T13:06:03.000Z\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-actionscript-debugging.json\n// module id = 1075\n// module chunks = 88515143727939"],"sourceRoot":""}