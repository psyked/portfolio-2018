webpackJsonp([0xb0ed27af973],{1296:function(e,t){e.exports={data:{site:{siteMetadata:{title:"Psyked: James' Web Development website",author:"James Ford"}},markdownRemark:{id:"/Users/James/Repositories/portfolio-2018/src/posts/testing-performance-speed-and-best-practices-with-lighthouse/index.md absPath of file >>> MarkdownRemark",html:'<blockquote>\n<p>Lighthouse is an open-source, automated tool for improving the quality of your web apps.</p>\n</blockquote>\n<p><img src="/content/images/2017/01/mockup-screenshot.jpg" alt="Lighthouse screenshot"></p>\n<p>Web Development is an ever changing landscape, and as such we use a variety of tools to evaluate what we do. Like many others with a vested interest in the web, Google has its own projects, and <a href="https://developers.google.com/web/tools/lighthouse/">Lighthouse</a> is one of them.</p>\n<p>I find the Lighthouse tool <em>particularly</em> interesting for two reasons - firstly because it looks at a few of the more recent specs like <strong>Progressive Web Apps</strong> and the difficult-to-evaluate concepts like perceived speed, and secondly because it\'s developed by Google, which implies that it\'s looking at the kind of website optimisations that Google cares about when indexing a website.</p>\n<h2>What Lighthouse checks</h2>\n<p>A few of the things that Lighthouse currently tests for are:</p>\n<ul>\n<li>Offline/flaky connection support</li>\n<li>Page load performance</li>\n<li>Progressive Enhancement</li>\n<li>Secure connection (HTTPS)</li>\n<li>Mobile-friendliness</li>\n<li>Page render speed / avoiding "jank"</li>\n<li>Modern accessibility tags</li>\n</ul>\n<h2>Running Lighthouse</h2>\n<p>There are two ways to run a set of Lighthouse tests. One method is through a Chrome Extension, which you can install through the <a href="https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk">Chrome Web Store</a> or as a Node module on <a href="https://www.npmjs.com/package/lighthouse">NPM.</a></p>\n<h2>Useful Links</h2>\n<ul>\n<li><a href="https://developers.google.com/web/tools/lighthouse/">The Lighthouse tool on Google Developers</a></li>\n<li><a href="https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk">Lighthouse on the Chrome Web Store</a></li>\n<li><a href="https://www.npmjs.com/package/lighthouse">Lighthouse on NPM</a></li>\n<li><a href="https://googlechrome.github.io/lighthouse/viewer/">Lighthouse report Viewer</a></li>\n</ul>\n<p>And if you\'re interested in an example report, take a look at <a href="https://googlechrome.github.io/lighthouse/viewer/?gist=9573cb9302e15405026b40098c8fd342">the report for www.psyked.co.uk</a></p>',frontmatter:{title:"Testing Performance, Speed and Best Practices with Lighthouse",date:"January 28, 2017",tags:["performance","testing","progressive-web-apps"],url:null,image:null,description:null}}},pathContext:{prev:{frontmatter:{path:"/blog/testing-performance-speed-and-best-practices-with-lighthouse-109803ce90ba/",tags:["Web Development","Performance Testing"],title:"Testing Performance, Speed and Best Practices with Lighthouse",date:"2017-01-28T20:31:07.000Z"}},next:{frontmatter:{path:"/blog/hallmarks-of-a-modern-development-workflow-continuous-integration-deployment-811b2545be39/",tags:null,title:"Hallmarks of a Modern development workflow â€” Continuous Integration & Deployment",date:"2017-01-30T09:15:00.000Z"}}}}}});
//# sourceMappingURL=path---blog-testing-performance-speed-and-best-practices-with-lighthouse-f3e219d89ea4e90e6522.js.map